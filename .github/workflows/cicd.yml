name: Build, Push and Deploy Frontend

on:
  push:
    branches: [develop, main]

env:
  REGISTRY: kaimen-hk.tencentcloudcr.com
  IMAGE_NAME: management.platform.frontend/kaimen-admin-frontend

jobs:
  build-and-push:
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: [self-hosted, HK]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Tencent Cloud TCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/develop' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          no-cache: true
          build-args: |
            BUILD_MODE=dev
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract primary tag
        run: |
          FULL_IMAGE=$(echo "${{ steps.meta.outputs.tags }}" | tail -n1)
          TAG="${FULL_IMAGE##*:}"
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          echo "Primary tag: $TAG"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Configure KUBECONFIG from secret
        run: |
          echo "${{ secrets.KUBECONFIG }}" > /tmp/kubeconfig
          yq e '(.contexts[].context.user) |= tostring | (.users[].name) |= tostring' -i /tmp/kubeconfig
          mkdir -p $HOME/.kube
          mv /tmp/kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify kubectl connection
        run: kubectl cluster-info

      - name: Deploy to dev Environment
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: |
          helm upgrade --install kaimen-admin-frontend-dev ./charts/kaimen-frontend \
            --namespace kaimen-admin-dev --create-namespace \
            --set-string imagePullSecrets.username='${{ secrets.TCR_USERNAME }}' \
            --set-string imagePullSecrets.password='${{ secrets.TCR_PASSWORD }}' \
            --set-string ingress.tlsCrt='${{ secrets.INGRESS_TLS_CRT }}' \
            --set-string ingress.tlsKey='${{ secrets.INGRESS_TLS_KEY }}' \
            --set-string config.ENVIRONMENT=development

      - name: Deploy to Prod Environment
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          helm upgrade --install kaimen-admin-frontend ./charts/kaimen-frontend \
            --namespace kaimen-admin --create-namespace \
            --set-string imagePullSecrets.username='${{ secrets.TCR_USERNAME }}' \
            --set-string imagePullSecrets.password='${{ secrets.TCR_PASSWORD }}' \
            --set-string ingress.tlsCrt='${{ secrets.INGRESS_TLS_CRT }}' \
            --set-string ingress.tlsKey='${{ secrets.INGRESS_TLS_KEY }}' \
            --set-string environment=prod
