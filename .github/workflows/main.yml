name: Build, Push and Deploy Frontend

on:
  push:
    branches: [main, develop]

env:
  REGISTRY: kaimen.tencentcloudcr.com
  IMAGE_NAME: management.platform.frontend/kaimen-admin-frontend

jobs:
  build-and-push-dev:
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ["self-hosted", "HK"]
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Tencent Cloud TCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}

      - name: Extract metadata (tags, labels) for dev
        id: meta_dev
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=dev-latest

      - name: Build and push Docker image (dev)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}
          build-args: |
            BUILD_MODE=dev
          tags: ${{ steps.meta_dev.outputs.tags }}
          labels: ${{ steps.meta_dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-prod:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Tencent Cloud TCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest

      - name: Build and push Docker image (prod)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-develop:
    name: Deploy to Dev Environment
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: build-and-push-dev
    runs-on: [self-hosted, HK]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Determine image tag from current commit
        run: |
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Configure KUBECONFIG from secret
        run: |
          echo "${{ secrets.KUBECONFIG }}" > /tmp/kubeconfig
          yq e '(.contexts[].context.user) |= tostring | (.users[].name) |= tostring' -i /tmp/kubeconfig
          mkdir -p $HOME/.kube
          mv /tmp/kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify kubectl connection
        run: kubectl cluster-info

      - name: Deploy with Helm (frontend dev)
        run: |
          helm upgrade --install kaimen-admin-frontend-dev ./charts/kaimen-frontend \
            --namespace kaimen-admin-dev --create-namespace \
            --set-string image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            --set-string image.tag=${IMAGE_TAG} \
            --set-string imagePullSecrets.username='${{ secrets.TCR_USERNAME }}' \
            --set-string imagePullSecrets.password='${{ secrets.TCR_PASSWORD }}' \
            --set-string config.ENVIRONMENT=development

  deploy-to-prod:
    name: Deploy to Prod Environment
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-and-push-prod
    runs-on: [self-hosted, HK]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Determine image tag from current commit
        run: |
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Configure KUBECONFIG from secret
        run: |
          echo "${{ secrets.KUBECONFIG }}" > /tmp/kubeconfig
          yq e '(.contexts[].context.user) |= tostring | (.users[].name) |= tostring' -i /tmp/kubeconfig
          mkdir -p $HOME/.kube
          mv /tmp/kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify kubectl connection
        run: kubectl cluster-info

      - name: Deploy with Helm (frontend prod)
        run: |
          helm upgrade --install kaimen-admin-frontend ./charts/kaimen-frontend \
            --namespace kaimen-admin --create-namespace \
            --set-string image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            --set-string image.tag=${IMAGE_TAG} \
            --set-string imagePullSecrets.username='${{ secrets.TCR_USERNAME }}' \
            --set-string imagePullSecrets.password='${{ secrets.TCR_PASSWORD }}' \
            --set-string config.ENVIRONMENT=production
